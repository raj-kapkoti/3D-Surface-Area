//code written for java8



import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the surfaceArea function below.
    public static int surfaceArea(int[][] A) {
        
    int result = 0;
    for(int row = 0; row < A.length - 1; row++){
        for (int col = 0; col < A[0].length - 1; col++){
        
            result += 4 * A[row][col] + 2;
            result -= 2 * Math.min(A[row][col], A[row+1][col]);
            result -= 2 * Math.min(A[row][col], A[row][col+1]);
        } 
    } 
    return result;
}

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String[] HW = scanner.nextLine().split(" ");

        int H = Integer.parseInt(HW[0]);

        int W = Integer.parseInt(HW[1]);

        int[][] A = new int[H+1][W+1];

        for (int i = 0; i < H; i++) {
            String[] ARowItems = scanner.nextLine().split(" ");
            scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

            for (int j = 0; j < W; j++) {
                int AItem = Integer.parseInt(ARowItems[j]);
                A[i][j] = AItem;
                A[i][W]=0;
            }
        }
        for (int j = 0; j < W+1; j++) 
        A[H][j]=0;
                
      

        int result = surfaceArea(A);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
